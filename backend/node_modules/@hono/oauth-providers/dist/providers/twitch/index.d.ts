import { MiddlewareHandler } from 'hono';
import { Scopes, TwitchRefreshResponse, TwitchValidateResponse, TwitchUser } from './types.js';
export { TwitchErrorResponse, TwitchRefreshError, TwitchRefreshSuccess, TwitchRevokingError, TwitchRevokingResponse, TwitchRevokingSuccess, TwitchTokenError, TwitchTokenResponse, TwitchTokenSuccess, TwitchUserResponse, TwitchValidateError, TwitchValidateSuccess } from './types.js';
import { O as OAuthVariables } from '../../index-C5qB2fsf.js';

declare function twitchAuth(options: {
    scope: Scopes[];
    client_id: string;
    client_secret: string;
    redirect_uri?: string;
    state?: string;
    force_verify?: boolean;
}): MiddlewareHandler;

declare function refreshToken(client_id: string, client_secret: string, refresh_token: string): Promise<TwitchRefreshResponse>;

declare function revokeToken(client_id: string, token: string): Promise<boolean>;

declare function validateToken(token: string): Promise<TwitchValidateResponse>;

declare module 'hono' {
    interface ContextVariableMap extends OAuthVariables {
        'user-twitch': Partial<TwitchUser> | undefined;
    }
}

export { Scopes, TwitchRefreshResponse, TwitchUser, TwitchValidateResponse, refreshToken, revokeToken, twitchAuth, validateToken };
